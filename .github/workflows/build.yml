name: build

on: [push]

env:
  CONTAINER_REGISTRY: docker.anders.fi
  CONTAINER_REGISTRY_REPO: docker.anders.fi/devops/azure-kolga-demo
  CONTAINER_REGISTRY_USER: azure-registry-user
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
  DOCKER_IMAGE_NAME: kolga.github.riku
#  CONTAINER_REGISTRY: docker.anders.fi
#  CONTAINER_REGISTRY_REPO: docker.anders.fi/anders/ci-configuration
#  CONTAINER_REGISTRY_USER: azure-registry-user
#  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
#  DOCKER_IMAGE_NAME: ci-configuration
#  DOCKER_IMAGE_TAG: v3
#  TEST_VARIABLE: $CONTAINER_REGISTRY/anders

jobs:
  on_push:
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: login to Docker container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ env.CONTAINER_REGISTRY_USER }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
#      - name: construct K贸lga image name
#        run: echo "::set-env name=HOST_IMAGE::$CONTAINER_REGISTRY_REPO/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG"
      - name: pull K贸lga Docker image
        run: docker pull $CONTAINER_REGISTRY_REPO:master-development
      - name: use K贸lga to build K贸lga
        id: build
        uses: ./.github/actions/build
      - name: the real build
        run: |
          env > ./.docker-env
          docker run --env-file .docker-env $HOST_IMAGE /bin/bash -c "export && ./devops create_images"
          export BUILT_IMAGE=$(./devops docker_test_image)
          echo "::set-env name=BUILT_DOCKER_TEST_IMAGE::$BUILT_IMAGE"'
      - name: style tests
        run: docker run $BUILT_DOCKER_TEST_IMAGE /bin/bash -c "make style-tests"
        if: steps.build.outcome == 'success'
      - name: typing tests
        run: docker run $BUILT_DOCKER_TEST_IMAGE /bin/bash -c "make typing-tests"
        if: steps.build.outcome == 'success'
      - name: package tests
        run: docker run $BUILT_DOCKER_TEST_IMAGE /bin/bash -c "make package-tests"
        if: steps.build.outcome == 'success'
      - name: doc tests
        run: docker run $BUILT_DOCKER_TEST_IMAGE /bin/bash -c "make docs"
        if: steps.build.outcome == 'success'
      - name: functional tests
        run: |
          sudo chown $(whoami) /etc/hosts && echo 127.0.0.1 docker-registry >> /etc/hosts
          make test
        if: steps.build.outcome == 'success'